##    laravel.test:
##        build:
##            context: ./vendor/laravel/sail/runtimes/8.2
##            dockerfile: 1Dockerfile
##            args:
##                WWWGROUP: '${WWWGROUP}'
##        image: sail-8.2/app
##        extra_hosts:
##            - 'host.docker.internal:host-gateway'
##        ports:
##            - '${APP_PORT:-80}:80'
##            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
##        environment:
##            WWWUSER: '${WWWUSER}'
##            LARAVEL_SAIL: 1
##            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
##            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
##            IGNITION_LOCAL_SITES_PATH: '${PWD}'
##        volumes:
##            - '.:/var/www/html'
##        networks:
##            - sail
##        depends_on:
##            - sqlite
##            - redis
##            - meilisearch
##            - mailpit
##            - selenium
services:

#    /////////////////////////////////////////////////////
#    filament-first:
#        container_name: filament-first
#        build: .
#        volumes:
#            - ./app:/var/www/html
#        ports:
#            - 8000:80
#    nginx:
#        image: nginx:alpine
#        container_name: nginx-compose
#        restart: unless-stopped
#        ports:
#            - 9000:90
#        volumes:
#            - ./:/var/www
#            - ./docker-compose/nginx:/etc/nginx/conf.d/

#    /////////////////////////////////////////////////

    php:
        build:
            context: .
            dockerfile: 1Dockerfile
        volumes:
            - .:/var/www/html
#        ports:
#            - "9000"
        container_name: php
        extra_hosts:
            - "172.17.0.1:host-gateway"

    nginx:
        image: nginx:1.24-alpine
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www/html
        ports:
            - "80:80"
        depends_on:
            -   php

#    php:
#        build:
#            context: .
#            dockerfile: 1Dockerfile.php
#        volumes:
#            - ./app:/var/www/html
#        ports:
#            - "9000"
#
#    nginx:
#        build:
#            context: .
#            dockerfile: 1Dockerfile.nginx
#        ports:
#            - "80:80"
#        depends_on:
#            - php


#    redis:
#        image: 'redis:alpine'
#        ports:
#            - '${FORWARD_REDIS_PORT:-6379}:6379'
#        volumes:
#            - 'sail-redis:/data'
#        networks:
#            - sail
#        healthcheck:
#            test:
#                - CMD
#                - redis-cli
#                - ping
#            retries: 3
#            timeout: 5s
#    meilisearch:
#        image: 'getmeili/meilisearch:latest'
#        ports:
#            - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
#        volumes:
#            - 'sail-meilisearch:/meili_data'
#        networks:
#            - sail
#        healthcheck:
#            test:
#                - CMD
#                - wget
#                - '--no-verbose'
#                - '--spider'
#                - 'http://localhost:7700/health'
#            retries: 3
#            timeout: 5s
#    mailpit:
#        image: 'axllent/mailpit:latest'
#        ports:
#            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
#            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
#        networks:
#            - sail
#    selenium:
#        image: selenium/standalone-chrome
#        extra_hosts:
#            - 'host.docker.internal:host-gateway'
#        volumes:
#            - '/dev/shm:/dev/shm'
#        networks:
#            - sail
#networks:
#    sail:
#        driver: bridge
#volumes:
#    sail-mysql:
#        driver: local
#    sail-redis:
#        driver: local
#    sail-meilisearch:
#        driver: local

#services:
#    app:
#        build:
#            args:
#                user: user
#                uid: 1000
#            context: ./
#            dockerfile: 1Dockerfile
#        image: my-first-image
#        container_name: app
#        restart: unless-stopped
#        working_dir: /var/www/
#        volumes:
#            - ./:/var/www
#        networks:
#            - my-network
#
#    db:
#        image: sqlite:latest
#        container_name: database
#        restart: unless-stopped
#        volumes:
#            - ./database:/var/www/database
#        networks:
#            - my-network
#
#    nginx:
#        image: nginx:alpine
#        container_name: nginx-compose
#        restart: unless-stopped
#        ports:
#            - 8000:80
#        volumes:
#            - ./:/var/www
#            - ./docker-compose/nginx:/etc/nginx/conf.d/
#        networks:
#            - my-network
#
#networks:
#    my-network:
#        driver: bridge
